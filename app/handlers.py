from aiogram import Router, F
from aiogram.filters import CommandStart
from aiogram.types import Message, CallbackQuery
from aiogram.fsm.context import FSMContext
import requests

from config import API_key
from .FSM import Weather
from .keyboards import change_city
from .ai import main

router = Router()

@router.message(CommandStart())
async def start(message: Message, state: FSMContext):
    await message.answer_photo(photo='AgACAgIAAxkBAAMCZ5ETn-c6RiYq7kYAAfM2kbIxwr_6AAKO6jEb41GJSGS41lDGLBTQAQADAgADeQADNgQ',
                               caption='–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! ‚úã\n–ö–∞–∫–æ–π –≥–æ—Ä–æ–¥ –±—É–¥–µ–º —Å–º–æ—Ç—Ä–µ—Ç—å? üòä')
    await state.set_state(Weather.city)

@router.callback_query(F.data == 'change_city')
async def new_city(callback: CallbackQuery, state: FSMContext):
    await callback.answer('–î—Ä—É–≥–æ–π –≥–æ—Ä–æ–¥')
    await callback.message.answer('–£–∫–∞–∂–∏—Ç–µ –¥—Ä—É–≥–æ–π –≥–æ—Ä–æ–¥, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ ü§î')
    await state.set_state(Weather.city)

@router.message(Weather.city)
async def weather(message: Message, state: FSMContext):
    city_name = message.text
    response_k = f'https://api.openweathermap.org/data/2.5/weather?q={city_name}&appid={API_key}&units=metric&lang=ru'
    response = requests.get(response_k)
    data = response.json()

    if response.status_code == 200:
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ —Ç–æ–º, —á—Ç–æ –ø—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–≥–æ–¥—É
        checking_message = await message.answer('–£–∂–µ –ø—Ä–æ–≤–µ—Ä—è—é, –ø–∞—Ä—É —Å–µ–∫—É–Ω–¥ üòÅ')
        
        temperature = data['main']['temp']
        weather_description = data['weather'][0]['description']
        content = f'–ü–æ–≥–æ–¥–∞ –≤ –≥–æ—Ä–æ–¥–µ {city_name} —Å–µ–π—á–∞—Å {temperature}¬∞C, {weather_description}.'
        result = await main()

        # –¢–µ–ø–µ—Ä—å —Ä–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        await checking_message.edit_text(result, reply_markup=change_city)
    else:
        await message.answer(f'–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –æ –ø–æ–≥–æ–¥–µ –¥–ª—è –≥–æ—Ä–æ–¥–∞ {city_name}. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –¥—Ä—É–≥–æ–π –≥–æ—Ä–æ–¥.')
    
    await state.clear()